{"ast":null,"code":"// import React, { useRef, useState } from 'react';\n// import { FaHome, FaChartLine, FaUser, FaShoppingCart, FaBell } from 'react-icons/fa'; \n// import './registerpage.css'; \n// import 'bootstrap/dist/css/bootstrap.min.css'; \n// import { Link } from 'react-router-dom';\n\n// function Registerpage() {\n//   const videoRef = useRef(null);\n//   const canvasRef = useRef(null);\n//   const [fullName, setFullName] = useState('');\n//   const [imageData, setImageData] = useState(null);\n//   const [cameraActive, setCameraActive] = useState(false);\n\n//   const startCamera = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n//       videoRef.current.srcObject = stream;\n//       setCameraActive(true);\n//     } catch (err) {\n//       console.error('Error accessing camera: ', err);\n//     }\n//   };\n\n//   const captureImage = () => {\n//     const video = videoRef.current;\n//     const canvas = canvasRef.current;\n//     const context = canvas.getContext('2d');\n//     canvas.width = video.videoWidth;\n//     canvas.height = video.videoHeight;\n//     context.drawImage(video, 0, 0);\n//     const dataUrl = canvas.toDataURL('image/png');\n//     setImageData(dataUrl);\n//     stopCamera();\n//   };\n\n//   const stopCamera = () => {\n//     const stream = videoRef.current?.srcObject;\n//     stream?.getTracks().forEach(track => track.stop());\n//     setCameraActive(false);\n//   };\n\n//   const retakeImage = () => {\n//     setImageData(null);\n//     startCamera();\n//   };\n\n//   const registerFace = () => {\n//     if (!imageData || !fullName) {\n//       alert(\"Please enter name and capture a photo first.\");\n//       return;\n//     }\n//     alert(`Registering face for ${fullName}`);\n//     // You can now send `imageData` and `fullName` to your backend.\n//   };\n\n//   return (\n//     <div className=\"app-container\">\n//       {/* Sidebar Section */}\n//       <div className=\"sidebar\">\n//         <div className=\"sidebar-header\">\n//           <h2>Container</h2> \n//         </div>\n\n//         <div className=\"sidebar-menu\">\n//           <Link to=\"/\" className=\"menu-item\">\n//             <FaHome className=\"icon\" />  \n//             <span>Register</span>\n//           </Link>\n//           <Link to=\"/sales\" className=\"menu-item\">\n//             <FaShoppingCart className=\"icon\" />\n//             <span>Livestream</span>\n//           </Link>\n//           <Link to=\"/customer\" className=\"menu-item\">\n//             <FaUser className=\"icon\" />\n//             <span>Q-A Assistant</span>\n//           </Link>\n\n//           <Link to=\"/catalog\" className=\"menu-item\">\n//             <FaChartLine className=\"icon\" />\n//             <span>Database</span>\n//           </Link>\n\n//         </div>\n\n//         <div className=\"sidebar-footer\">\n//           <span className=\"user-name\">POORANI</span>\n//         </div>\n//       </div>\n\n//      <div className=\"main-content\">\n//         <div className=\"registration-container\">\n//           <h3>Face Registration</h3>\n//           <p>Register new faces for recognition system</p>\n\n//           <label>Full Name</label>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter full name\"\n//             value={fullName}\n//             onChange={(e) => setFullName(e.target.value)}\n//           />\n\n//           <label>Capture Photo</label>\n//           {!imageData && !cameraActive && (\n//             <button className=\"start-camera-btn\" onClick={startCamera}>üì∑ Start Camera</button>\n//           )}\n\n//           {cameraActive && (\n//             <div className=\"camera-container\">\n//               <video ref={videoRef} autoPlay muted playsInline className=\"camera-feed\" />\n//               <button className=\"capture-btn\" onClick={captureImage}>üì∏ Capture Photo</button>\n//             </div>\n//           )}\n\n//           {imageData && (\n//             <div className=\"image-preview\">\n//               <img src={imageData} alt=\"Captured face\" />\n//               <button className=\"retake-btn\" onClick={retakeImage}>üîÅ Retake Image</button>\n//             </div>\n//           )}\n\n//           <canvas ref={canvasRef} style={{ display: 'none' }} />\n\n//           <button className=\"register-btn\" onClick={registerFace}>Register Face</button>\n//         </div>\n//       </div>\n\n//     </div>\n//   );\n// }\n\n// export default Registerpage;","map":{"version":3,"names":[],"sources":["G:/Coding/KATOMARAN-HACKATHON/my-app/src/components/assets/registerpage/registerpage.jsx"],"sourcesContent":["// import React, { useRef, useState } from 'react';\r\n// import { FaHome, FaChartLine, FaUser, FaShoppingCart, FaBell } from 'react-icons/fa'; \r\n// import './registerpage.css'; \r\n// import 'bootstrap/dist/css/bootstrap.min.css'; \r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\n// function Registerpage() {\r\n//   const videoRef = useRef(null);\r\n//   const canvasRef = useRef(null);\r\n//   const [fullName, setFullName] = useState('');\r\n//   const [imageData, setImageData] = useState(null);\r\n//   const [cameraActive, setCameraActive] = useState(false);\r\n\r\n//   const startCamera = async () => {\r\n//     try {\r\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n//       videoRef.current.srcObject = stream;\r\n//       setCameraActive(true);\r\n//     } catch (err) {\r\n//       console.error('Error accessing camera: ', err);\r\n//     }\r\n//   };\r\n\r\n//   const captureImage = () => {\r\n//     const video = videoRef.current;\r\n//     const canvas = canvasRef.current;\r\n//     const context = canvas.getContext('2d');\r\n//     canvas.width = video.videoWidth;\r\n//     canvas.height = video.videoHeight;\r\n//     context.drawImage(video, 0, 0);\r\n//     const dataUrl = canvas.toDataURL('image/png');\r\n//     setImageData(dataUrl);\r\n//     stopCamera();\r\n//   };\r\n\r\n//   const stopCamera = () => {\r\n//     const stream = videoRef.current?.srcObject;\r\n//     stream?.getTracks().forEach(track => track.stop());\r\n//     setCameraActive(false);\r\n//   };\r\n\r\n//   const retakeImage = () => {\r\n//     setImageData(null);\r\n//     startCamera();\r\n//   };\r\n\r\n//   const registerFace = () => {\r\n//     if (!imageData || !fullName) {\r\n//       alert(\"Please enter name and capture a photo first.\");\r\n//       return;\r\n//     }\r\n//     alert(`Registering face for ${fullName}`);\r\n//     // You can now send `imageData` and `fullName` to your backend.\r\n//   };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//   return (\r\n//     <div className=\"app-container\">\r\n//       {/* Sidebar Section */}\r\n//       <div className=\"sidebar\">\r\n//         <div className=\"sidebar-header\">\r\n//           <h2>Container</h2> \r\n//         </div>\r\n\r\n//         <div className=\"sidebar-menu\">\r\n//           <Link to=\"/\" className=\"menu-item\">\r\n//             <FaHome className=\"icon\" />  \r\n//             <span>Register</span>\r\n//           </Link>\r\n//           <Link to=\"/sales\" className=\"menu-item\">\r\n//             <FaShoppingCart className=\"icon\" />\r\n//             <span>Livestream</span>\r\n//           </Link>\r\n//           <Link to=\"/customer\" className=\"menu-item\">\r\n//             <FaUser className=\"icon\" />\r\n//             <span>Q-A Assistant</span>\r\n//           </Link>\r\n          \r\n//           <Link to=\"/catalog\" className=\"menu-item\">\r\n//             <FaChartLine className=\"icon\" />\r\n//             <span>Database</span>\r\n//           </Link>\r\n          \r\n//         </div>\r\n\r\n//         <div className=\"sidebar-footer\">\r\n//           <span className=\"user-name\">POORANI</span>\r\n//         </div>\r\n//       </div>\r\n\r\n\r\n\r\n\r\n\r\n//      <div className=\"main-content\">\r\n//         <div className=\"registration-container\">\r\n//           <h3>Face Registration</h3>\r\n//           <p>Register new faces for recognition system</p>\r\n\r\n//           <label>Full Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter full name\"\r\n//             value={fullName}\r\n//             onChange={(e) => setFullName(e.target.value)}\r\n//           />\r\n\r\n//           <label>Capture Photo</label>\r\n//           {!imageData && !cameraActive && (\r\n//             <button className=\"start-camera-btn\" onClick={startCamera}>üì∑ Start Camera</button>\r\n//           )}\r\n\r\n//           {cameraActive && (\r\n//             <div className=\"camera-container\">\r\n//               <video ref={videoRef} autoPlay muted playsInline className=\"camera-feed\" />\r\n//               <button className=\"capture-btn\" onClick={captureImage}>üì∏ Capture Photo</button>\r\n//             </div>\r\n//           )}\r\n\r\n//           {imageData && (\r\n//             <div className=\"image-preview\">\r\n//               <img src={imageData} alt=\"Captured face\" />\r\n//               <button className=\"retake-btn\" onClick={retakeImage}>üîÅ Retake Image</button>\r\n//             </div>\r\n//           )}\r\n\r\n//           <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n\r\n//           <button className=\"register-btn\" onClick={registerFace}>Register Face</button>\r\n//         </div>\r\n//       </div>\r\n\r\n\r\n      \r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Registerpage;\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}