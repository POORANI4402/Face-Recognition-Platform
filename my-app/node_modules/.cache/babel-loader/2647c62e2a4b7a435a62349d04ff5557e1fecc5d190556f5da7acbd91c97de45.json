{"ast":null,"code":"var _jsxFileName = \"G:\\\\Coding\\\\KATOMARAN-HACKATHON\\\\my-app\\\\src\\\\components\\\\assets\\\\livestream\\\\livestream.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LiveStream() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const canvasWidth = 640;\n  const canvasHeight = 480;\n  const [faceMemory, setFaceMemory] = useState({});\n  useEffect(() => {\n    let intervalId;\n    async function startCamera() {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        videoRef.current.srcObject = stream;\n        videoRef.current.play();\n        intervalId = setInterval(async () => {\n          if (!videoRef.current || !canvasRef.current) return;\n          const video = videoRef.current;\n          const canvas = canvasRef.current;\n          const ctx = canvas.getContext(\"2d\");\n          ctx.drawImage(video, 0, 0, canvasWidth, canvasHeight);\n          const dataUrl = canvas.toDataURL(\"image/jpeg\");\n          try {\n            const response = await fetch(\"http://localhost:5000/recognize\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                image: dataUrl\n              })\n            });\n            const {\n              faces\n            } = await response.json();\n            ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n            ctx.drawImage(video, 0, 0, canvasWidth, canvasHeight);\n            const now = Date.now();\n            const updatedMemory = {\n              ...faceMemory\n            };\n            faces.forEach(({\n              name,\n              left,\n              top,\n              right,\n              bottom\n            }) => {\n              const key = `${left}_${top}_${right}_${bottom}`;\n              updatedMemory[key] = {\n                name,\n                coords: {\n                  left,\n                  top,\n                  right,\n                  bottom\n                },\n                timestamp: now\n              };\n            });\n            Object.entries(updatedMemory).forEach(([key, {\n              name,\n              coords,\n              timestamp\n            }]) => {\n              if (now - timestamp > 3000) {\n                delete updatedMemory[key];\n                return;\n              }\n              const {\n                left,\n                top,\n                right,\n                bottom\n              } = coords;\n              ctx.strokeStyle = \"lime\";\n              ctx.lineWidth = 2;\n              ctx.strokeRect(left, top, right - left, bottom - top);\n              ctx.fillStyle = \"lime\";\n              ctx.font = \"16px Arial\";\n              ctx.fillText(name, left, top > 20 ? top - 10 : bottom + 20);\n            });\n            setFaceMemory(updatedMemory);\n          } catch (error) {\n            console.error(\"Recognition error:\", error);\n          }\n        }, 1000);\n      } catch (err) {\n        console.error(\"Camera error:\", err);\n      }\n    }\n    startCamera();\n    return () => {\n      var _videoRef$current;\n      clearInterval(intervalId);\n      if ((_videoRef$current = videoRef.current) !== null && _videoRef$current !== void 0 && _videoRef$current.srcObject) {\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [faceMemory]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: canvasWidth,\n      height: canvasHeight\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      width: canvasWidth,\n      height: canvasHeight,\n      autoPlay: true,\n      muted: true,\n      style: {\n        position: \"absolute\",\n        zIndex: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: canvasWidth,\n      height: canvasHeight,\n      style: {\n        position: \"absolute\",\n        zIndex: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(LiveStream, \"AHMwlctnoVoYZFp4HIBfOYuI4uI=\");\n_c = LiveStream;\nexport default LiveStream;\nvar _c;\n$RefreshReg$(_c, \"LiveStream\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","LiveStream","_s","videoRef","canvasRef","canvasWidth","canvasHeight","faceMemory","setFaceMemory","intervalId","startCamera","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","play","setInterval","canvas","ctx","getContext","drawImage","dataUrl","toDataURL","response","fetch","method","headers","body","JSON","stringify","image","faces","json","clearRect","now","Date","updatedMemory","forEach","name","left","top","right","bottom","key","coords","timestamp","Object","entries","strokeStyle","lineWidth","strokeRect","fillStyle","font","fillText","error","console","err","_videoRef$current","clearInterval","getTracks","track","stop","style","position","width","height","children","ref","autoPlay","muted","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/Coding/KATOMARAN-HACKATHON/my-app/src/components/assets/livestream/livestream.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nfunction LiveStream() {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const canvasWidth = 640;\r\n  const canvasHeight = 480;\r\n  const [faceMemory, setFaceMemory] = useState({});\r\n\r\n  useEffect(() => {\r\n    let intervalId;\r\n\r\n    async function startCamera() {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.play();\r\n\r\n        intervalId = setInterval(async () => {\r\n          if (!videoRef.current || !canvasRef.current) return;\r\n\r\n          const video = videoRef.current;\r\n          const canvas = canvasRef.current;\r\n          const ctx = canvas.getContext(\"2d\");\r\n\r\n          ctx.drawImage(video, 0, 0, canvasWidth, canvasHeight);\r\n          const dataUrl = canvas.toDataURL(\"image/jpeg\");\r\n\r\n          try {\r\n            const response = await fetch(\"http://localhost:5000/recognize\", {\r\n              method: \"POST\",\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              body: JSON.stringify({ image: dataUrl }),\r\n            });\r\n\r\n            const { faces } = await response.json();\r\n\r\n            ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n            ctx.drawImage(video, 0, 0, canvasWidth, canvasHeight);\r\n\r\n            const now = Date.now();\r\n            const updatedMemory = { ...faceMemory };\r\n\r\n            faces.forEach(({ name, left, top, right, bottom }) => {\r\n              const key = `${left}_${top}_${right}_${bottom}`;\r\n              updatedMemory[key] = { name, coords: { left, top, right, bottom }, timestamp: now };\r\n            });\r\n\r\n            Object.entries(updatedMemory).forEach(([key, { name, coords, timestamp }]) => {\r\n              if (now - timestamp > 3000) {\r\n                delete updatedMemory[key];\r\n                return;\r\n              }\r\n\r\n              const { left, top, right, bottom } = coords;\r\n              ctx.strokeStyle = \"lime\";\r\n              ctx.lineWidth = 2;\r\n              ctx.strokeRect(left, top, right - left, bottom - top);\r\n\r\n              ctx.fillStyle = \"lime\";\r\n              ctx.font = \"16px Arial\";\r\n              ctx.fillText(name, left, top > 20 ? top - 10 : bottom + 20);\r\n            });\r\n\r\n            setFaceMemory(updatedMemory);\r\n          } catch (error) {\r\n            console.error(\"Recognition error:\", error);\r\n          }\r\n        }, 1000);\r\n      } catch (err) {\r\n        console.error(\"Camera error:\", err);\r\n      }\r\n    }\r\n\r\n    startCamera();\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n      if (videoRef.current?.srcObject) {\r\n        videoRef.current.srcObject.getTracks().forEach((track) => track.stop());\r\n      }\r\n    };\r\n  }, [faceMemory]);\r\n\r\n  return (\r\n    <div style={{ position: \"relative\", width: canvasWidth, height: canvasHeight }}>\r\n      <video ref={videoRef} width={canvasWidth} height={canvasHeight} autoPlay muted style={{ position: \"absolute\", zIndex: 1 }} />\r\n      <canvas ref={canvasRef} width={canvasWidth} height={canvasHeight} style={{ position: \"absolute\", zIndex: 2 }} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LiveStream;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}