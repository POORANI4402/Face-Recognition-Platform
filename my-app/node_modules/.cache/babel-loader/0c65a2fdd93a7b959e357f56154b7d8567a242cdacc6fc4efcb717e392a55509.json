{"ast":null,"code":"var _jsxFileName = \"G:\\\\Coding\\\\KATOMARAN-HACKATHON\\\\my-app\\\\src\\\\components\\\\assets\\\\livestream\\\\livestream.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LiveStream() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [faceMemory, setFaceMemory] = useState({});\n  const canvasWidth = 640;\n  const canvasHeight = 480;\n  useEffect(() => {\n    let intervalId;\n    async function startCamera() {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        videoRef.current.srcObject = stream;\n        videoRef.current.play();\n        intervalId = setInterval(async () => {\n          const video = videoRef.current;\n          const canvas = canvasRef.current;\n          const ctx = canvas.getContext(\"2d\");\n          ctx.drawImage(video, 0, 0, canvasWidth, canvasHeight);\n          const dataUrl = canvas.toDataURL(\"image/jpeg\");\n          try {\n            const res = await fetch(\"http://localhost:5000/recognize\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                image: dataUrl\n              })\n            });\n            const result = await res.json();\n            const newMemory = {};\n            ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n            ctx.drawImage(video, 0, 0, canvasWidth, canvasHeight);\n            result.faces.forEach(({\n              name,\n              top,\n              right,\n              bottom,\n              left\n            }) => {\n              newMemory[`${left}_${top}`] = {\n                name,\n                top,\n                right,\n                bottom,\n                left,\n                timestamp: Date.now()\n              };\n            });\n\n            // Filter out stale entries\n            const now = Date.now();\n            Object.entries(newMemory).forEach(([key, face]) => {\n              if (now - face.timestamp > 3000) delete newMemory[key];\n            });\n            setFaceMemory(newMemory);\n\n            // Draw boxes\n            Object.values(newMemory).forEach(({\n              name,\n              top,\n              right,\n              bottom,\n              left\n            }) => {\n              ctx.strokeStyle = \"lime\";\n              ctx.lineWidth = 2;\n              ctx.strokeRect(left, top, right - left, bottom - top);\n              ctx.fillStyle = \"lime\";\n              ctx.font = \"16px Arial\";\n              ctx.fillText(name, left + 4, top > 20 ? top - 8 : bottom + 20);\n            });\n          } catch (err) {\n            console.error(\"Recognition failed:\", err);\n          }\n        }, 1000);\n      } catch (err) {\n        console.error(\"Camera access denied\", err);\n      }\n    }\n    startCamera();\n    return () => {\n      clearInterval(intervalId);\n      if (videoRef.current && videoRef.current.srcObject) {\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: canvasWidth,\n      height: canvasHeight\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      width: canvasWidth,\n      height: canvasHeight,\n      autoPlay: true,\n      muted: true,\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        zIndex: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: canvasWidth,\n      height: canvasHeight,\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        zIndex: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(LiveStream, \"AHMwlctnoVoYZFp4HIBfOYuI4uI=\");\n_c = LiveStream;\nexport default LiveStream;\nvar _c;\n$RefreshReg$(_c, \"LiveStream\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","LiveStream","_s","videoRef","canvasRef","faceMemory","setFaceMemory","canvasWidth","canvasHeight","intervalId","startCamera","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","play","setInterval","canvas","ctx","getContext","drawImage","dataUrl","toDataURL","res","fetch","method","headers","body","JSON","stringify","image","result","json","newMemory","clearRect","faces","forEach","name","top","right","bottom","left","timestamp","Date","now","Object","entries","key","face","values","strokeStyle","lineWidth","strokeRect","fillStyle","font","fillText","err","console","error","clearInterval","getTracks","track","stop","style","position","width","height","children","ref","autoPlay","muted","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/Coding/KATOMARAN-HACKATHON/my-app/src/components/assets/livestream/livestream.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nfunction LiveStream() {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [faceMemory, setFaceMemory] = useState({});\r\n  const canvasWidth = 640;\r\n  const canvasHeight = 480;\r\n\r\n  useEffect(() => {\r\n    let intervalId;\r\n\r\n    async function startCamera() {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.play();\r\n\r\n        intervalId = setInterval(async () => {\r\n          const video = videoRef.current;\r\n          const canvas = canvasRef.current;\r\n          const ctx = canvas.getContext(\"2d\");\r\n\r\n          ctx.drawImage(video, 0, 0, canvasWidth, canvasHeight);\r\n          const dataUrl = canvas.toDataURL(\"image/jpeg\");\r\n\r\n          try {\r\n            const res = await fetch(\"http://localhost:5000/recognize\", {\r\n              method: \"POST\",\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              body: JSON.stringify({ image: dataUrl }),\r\n            });\r\n\r\n            const result = await res.json();\r\n            const newMemory = {};\r\n\r\n            ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n            ctx.drawImage(video, 0, 0, canvasWidth, canvasHeight);\r\n\r\n            result.faces.forEach(({ name, top, right, bottom, left }) => {\r\n              newMemory[`${left}_${top}`] = { name, top, right, bottom, left, timestamp: Date.now() };\r\n            });\r\n\r\n            // Filter out stale entries\r\n            const now = Date.now();\r\n            Object.entries(newMemory).forEach(([key, face]) => {\r\n              if (now - face.timestamp > 3000) delete newMemory[key];\r\n            });\r\n\r\n            setFaceMemory(newMemory);\r\n\r\n            // Draw boxes\r\n            Object.values(newMemory).forEach(({ name, top, right, bottom, left }) => {\r\n              ctx.strokeStyle = \"lime\";\r\n              ctx.lineWidth = 2;\r\n              ctx.strokeRect(left, top, right - left, bottom - top);\r\n\r\n              ctx.fillStyle = \"lime\";\r\n              ctx.font = \"16px Arial\";\r\n              ctx.fillText(name, left + 4, top > 20 ? top - 8 : bottom + 20);\r\n            });\r\n\r\n          } catch (err) {\r\n            console.error(\"Recognition failed:\", err);\r\n          }\r\n\r\n        }, 1000);\r\n      } catch (err) {\r\n        console.error(\"Camera access denied\", err);\r\n      }\r\n    }\r\n\r\n    startCamera();\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n      if (videoRef.current && videoRef.current.srcObject) {\r\n        videoRef.current.srcObject.getTracks().forEach((track) => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ position: \"relative\", width: canvasWidth, height: canvasHeight }}>\r\n      <video\r\n        ref={videoRef}\r\n        width={canvasWidth}\r\n        height={canvasHeight}\r\n        autoPlay\r\n        muted\r\n        style={{ position: \"absolute\", top: 0, left: 0, zIndex: 1 }}\r\n      />\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={canvasWidth}\r\n        height={canvasHeight}\r\n        style={{ position: \"absolute\", top: 0, left: 0, zIndex: 2 }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LiveStream;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}