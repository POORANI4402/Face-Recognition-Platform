{"ast":null,"code":"var _jsxFileName = \"G:\\\\Coding\\\\KATOMARAN-HACKATHON\\\\my-app\\\\src\\\\components\\\\assets\\\\databasepage\\\\databasepage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './databasepage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DatabasePage() {\n  _s();\n  useEffect(() => {\n    fetch('http://localhost:5000/faces').then(res => res.json()).then(data => setFaces(data)).catch(err => console.error(\"Error fetching faces\", err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"database-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCE6 Registered Face Database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"face-grid\",\n      children: faces.map(face => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"face-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5000/registered_faces/${face.filename}`,\n          alt: face.name,\n          className: \"face-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"face-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: face.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"timestamp\",\n            children: face.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, face.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(DatabasePage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = DatabasePage;\nexport default DatabasePage;\nvar _c;\n$RefreshReg$(_c, \"DatabasePage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","DatabasePage","_s","fetch","then","res","json","data","setFaces","catch","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","faces","map","face","src","filename","alt","name","timestamp","id","_c","$RefreshReg$"],"sources":["G:/Coding/KATOMARAN-HACKATHON/my-app/src/components/assets/databasepage/databasepage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './databasepage.css';\r\n\r\nfunction DatabasePage() {\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/faces')\r\n      .then(res => res.json())\r\n      .then(data => setFaces(data))\r\n      .catch(err => console.error(\"Error fetching faces\", err));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"database-container\">\r\n      <h2>ðŸ“¦ Registered Face Database</h2>\r\n      <div className=\"face-grid\">\r\n        {faces.map((face) => (\r\n          <div key={face.id} className=\"face-card\">\r\n            <img\r\n              src={`http://localhost:5000/registered_faces/${face.filename}`}\r\n              alt={face.name}\r\n              className=\"face-img\"\r\n            />\r\n            <div className=\"face-details\">\r\n              <h5>{face.name}</h5>\r\n              <p className=\"timestamp\">{face.timestamp}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DatabasePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAEtBL,SAAS,CAAC,MAAM;IACdM,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIC,QAAQ,CAACD,IAAI,CAAC,CAAC,CAC5BE,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC,CAAC;EAC7D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAKa,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCd,OAAA;MAAAc,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpClB,OAAA;MAAKa,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBK,KAAK,CAACC,GAAG,CAAEC,IAAI,iBACdrB,OAAA;QAAmBa,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtCd,OAAA;UACEsB,GAAG,EAAE,0CAA0CD,IAAI,CAACE,QAAQ,EAAG;UAC/DC,GAAG,EAAEH,IAAI,CAACI,IAAK;UACfZ,SAAS,EAAC;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC,eACFlB,OAAA;UAAKa,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3Bd,OAAA;YAAAc,QAAA,EAAKO,IAAI,CAACI;UAAI;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpBlB,OAAA;YAAGa,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAEO,IAAI,CAACK;UAAS;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC;MAAA,GATEG,IAAI,CAACM,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CA7BQD,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AA+BrB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}